name: FastChess

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  Binaries:
    if: github.ref == 'refs/heads/master'
    uses: ./.github/workflows/binaries.yml
  FastChess:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        config:
          - { name: "Ubuntu 20.04", os: ubuntu-20.04, shell: "bash {0}" }
          - { name: "MacOS 12 Apple Clang", os: macos-12, shell: "bash {0}" }
          - {
              name: "Windows 2022 GCC",
              os: windows-2022,
              msys_sys: "mingw64",
              msys_env: "x86_64-gcc",
              shell: "msys2 {0}",
            }

    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    steps:
      - uses: actions/checkout@v3
      - name: Installing required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install valgrind
          clang++ --version
          g++ --version

      - name: Install windows make
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.config.msys_sys}}
          install: mingw-w64-${{matrix.config.msys_env}} make git expect

      - name: Macos clang version
        if: runner.os == 'Macos'
        run: |
          clang++ --version

      - name: Running Tests
        if: runner.os == 'Windows'
        run: |
          g++ --version
          make clean
          make -j tests
          ./fast-chess-tests*

      - name: Running fsanitize=address unit
        if: runner.os != 'Windows'
        run: |
          make clean
          make -j tests san=asan
          ./fast-chess-tests* -tse="*PERFT*"

      - name: Running fsanitize=undefined unit tests with clang++
        if: runner.os != 'Windows'
        run: |
          make clean
          make -j tests san=undefined CXX=clang++
          ./fast-chess-tests* -tse="*PERFT*"

      - name: Running fsanitize=address unit tests with clang++
        if: runner.os != 'Windows'
        run: |
          make clean
          make -j tests san=asan CXX=clang++
          ./fast-chess-tests*

      - name: Valgrind
        if: runner.os == 'Linux'
        run: |
          make clean
          make -j tests CXX=g++
          valgrind --error-exitcode=1 --errors-for-leak-kinds=all --leak-check=full ./fast-chess-tests* -tse="*PERFT*"
